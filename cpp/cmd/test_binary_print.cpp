#include <gtest/gtest.h>


#include "core/util/common.h"
#include "core/util/binary_print.h"

TEST(BinaryTest, Simple) {
  auto binary_0 = bsprint(0), binary_5 = bsprint(5),
       binary_255 = bsprint(255, 3);
  EXPECT_EQ(binary_0, "00000000");
  EXPECT_EQ(binary_5, "00000101");
  EXPECT_EQ(binary_255, "111");
}

TEST(BinaryTest, LongLong) {
  EXPECT_EQ(bsprint(0x5000000000000000LL, 63),
            "101000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0x5000000000000000LL, 64),
            "0101000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0x7000000000000000LL, 63),
            "111000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0x7000000000000000LL, 64),
            "0111000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0xF000000000000000ULL, 63),
            "111000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0xF000000000000000ULL, 64),
            "1111000000000000000000000000000000000000000000000000000000000000");
  EXPECT_EQ(bsprint(0xFFFFFFFFFFFFFFFFULL, 27), "111111111111111111111111111");
  EXPECT_EQ(bsprint(0xFFFFFFFFFFFFFFFFULL, 27), "111111111111111111111111111");
  EXPECT_EQ(bsprint(0x5555555555555555ULL, 27), "101010101010101010101010101");
  EXPECT_EQ(bsprint(0x1ULL, 27), "000000000000000000000000001");
  EXPECT_EQ(bsprint(0x70LL, 1), "0");
  EXPECT_EQ(bsprint(0x7FLL, 1), "1");
  EXPECT_EQ(bsprint(0x55ULL, 1), "1");
  EXPECT_EQ(bsprint(0x01ULL, 1), "1");
}

TEST(BinaryTest, Char) {
  EXPECT_EQ(bsprint((unsigned char)0xF0, 8), "11110000");
  EXPECT_EQ(bsprint((unsigned char)0x50, 8), "01010000");
  EXPECT_EQ(bsprint((char)0x70, 7), "1110000");
  EXPECT_EQ(bsprint((char)0x7F, 7), "1111111");
  EXPECT_EQ(bsprint((char)0x55, 7), "1010101");
  EXPECT_EQ(bsprint((char)0x01, 7), "0000001");
  EXPECT_EQ(bsprint((char)0x00, 2), "00");
  EXPECT_EQ(bsprint((char)0x70, 1), "0");
  EXPECT_EQ(bsprint((char)0x7F, 1), "1");
  EXPECT_EQ(bsprint((char)0x55, 1), "1");
  EXPECT_EQ(bsprint((char)0x01, 1), "1");
}