on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

env:
  cmake_version: 3.28.1
  libtorch_version: 2.1.2

jobs:
  build-on-ubuntu:
    runs-on: ubuntu-22.04
    steps:
    - name: Prepare environment
      run: |
            # sudo apt-get update
            # sudo apt-get upgrade -y
            sudo apt-get install gcc-10 g++-10 -y
            sudo apt-get remove cmake -y
            wget -O cmake.sh https://github.com/Kitware/CMake/releases/download/v${{ env.cmake_version }}/cmake-${{ env.cmake_version }}-linux-x86_64.sh
            sudo mkdir /opt/cmake
            sudo chmod +x cmake.sh
            sudo ./cmake.sh --skip-license --prefix=/opt/cmake
            echo "/opt/cmake/bin" >> $GITHUB_PATH
      shell: bash

    - uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        check-latest: true
  
    - name: Setup libtorch-cpu
      working-directory: cpp
      run: |
            mkdir -p subprojects; cd subprojects
            curl -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-${{ env.libtorch_version }}%2Bcpu.zip
            unzip -qq libtorch.zip
            echo "Downloaded libtorch, build version: $(cat ./libtorch/build-version), build hash: $(cat ./libtorch/build-hash)"
            echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/libtorch/lib" >> $GITHUB_ENV
            echo "LIBRARY_PATH=$LIBRARY_PATH:$(pwd)/libtorch/lib" >> $GITHUB_ENV
            echo "CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$(pwd)/libtorch" >> $GITHUB_ENV

    - name: Setup mason
      run: |
            python -m pip install --upgrade pip
            pip --version
            pip install meson
            meson --version
            sudo apt-get install ninja-build -y

    - name: Setup gtest
      working-directory: cpp
      run: |
            mkdir -p subprojects
            meson wrap install gtest

    - name: Build and Test with Meson
      working-directory: cpp
      run: |
            meson setup -Dcpp_args="-ffast-math -march=native -Wno-unknown-pragmas" build --buildtype=release
            meson compile -C build
            meson test --print-errorlogs --repeat=10 -C build
      shell: bash
      env:
       CC:   gcc-10
       CXX:  g++-10
      
    - name: Run extra tests
      run: bash scripts/run-tests-with-multiple-quoridor-board-size.sh
      shell: bash
      env:
       CC:   gcc-10
       CXX:  g++-10

    - name: Upload meson-logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: meson-logs-linux
        path: |
              cpp/build/meson-logs/meson-log.txt
              cpp/build/meson-logs/testlog.txt

  build-on-windows:
    runs-on: windows-latest
    steps:
    - name: Prepare environment
      uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        check-latest: true
  
    - name: Setup mason
      run: |
            python -m pip install --upgrade pip
            # meson has bug when finding libtorch libraries in Windows, temporarily patched in this fork
            pip install git+https://github.com/dvaCheng/meson.git@master
            meson --version
            choco install -y ninja

    - name: Setup libtorch-cpu
      working-directory: cpp
      run: |
            mkdir -p subprojects; cd subprojects
            curl -o libtorch.zip https://download.pytorch.org/libtorch/cpu/libtorch-win-shared-with-deps-${{ env.libtorch_version }}%2Bcpu.zip
            unzip -qq libtorch.zip
            echo "Downloaded libtorch, build version: $(cat .\libtorch\build-version), build hash: $(cat .\libtorch\build-hash)"
            echo "CMAKE_PREFIX_PATH=$(pwd)\libtorch;${CMAKE_PREFIX_PATH}" >> $env:GITHUB_ENV

    - name: Setup gtest
      working-directory: cpp
      run: meson wrap install gtest

    # Currently in 2023, libtorch needs msvc to work. So we compile everything with msvc.
    # This action enables msvc environments automatically for github workflow.
    - name: Prepare MSV
      uses: ilammy/msvc-dev-cmd@v1.12.1
      with:
        arch: x64
    # uses: bus1/cabuild/action/msdevshell@v1
    # with:
    #   architecture: x64             
    # uses: microsoft/setup-msbuild@v1.3.1  
    # with:
    #   msbuild-architecture: x64

    - name: Build and Test with Meson
      working-directory: cpp
      run: |
            meson setup build --buildtype=release
            meson compile -C build
            meson test --print-errorlogs --repeat=10 -C build

    - name: Upload meson-logs
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: meson-logs-windows
        path: |
              cpp/build/meson-logs/meson-log.txt
              cpp/build/meson-logs/testlog.txt

